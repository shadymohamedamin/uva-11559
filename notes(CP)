string to_string(int num)
{
    stringstream ss;
    ss << num;
    return ss.str();
}





ll fast_pow(ll a,ll b,ll M)
{
    ll res = 1;
    while ( b > 0 )
    {
        if ( b&1 ) res = (res*a)%M;
        a = (a*a)%M;
        b >>= 1;
    }
    return res;
}



ll calculatePower(ll base, ll powerRaised)
{
    if (powerRaised != 0)
        return (base*calculatePower(base, powerRaised-1));
    else
        return 1;
}


/*ll calculatePower(ll base, ll powerRaised)
{
    if (powerRaised != 0)
        return (base*calculatePower(base, powerRaised-1));
    else
        return 1;
}*/
inline ll exp(ll b, ll p, ll m) {
	ll r=1;
	while(p) {
		if(p&1)
			r=(__int128)r*b%m;
		b=(__int128)b*b%m;
		p/=2;
	}
	return r;
}
/*ll power(__int128 a,__int128 b,ll m){
    __int128 result = 1;
    while(b>0){
        if(b%2==1){
            result = (result*a)%m;b--;
        }
        a = (a*a)%m;b/=2;
    }
    return result;
}*/





   //     string name=to_string(x);  //from int to string
    //    long long y=stoll(name);   //from string to int
   // tolower  //to lower case of char
   // isalpha()      to check if this alpha or not
   
   
   
   
   
   
   
   for(int i=l;i>0&&s>0;i--)
    cout<<(i&-i)<<" "<<(i&i)<<endl;
   
   
   
   
   
   
   
/*string from_d_to_binary(ll n)
{
    string name="";
    while(n>0)
    {
        string h=to_string(n%2);
        name+=h;
        n/=2;
    }
    reverse(name.begin(),name.end());
    return name;
}*/
